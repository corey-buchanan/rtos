digraph G {
    rtos0 [label="Build real-time systems"];
    rtos0 -> {rtos04, rtos01};
    rtos00 [label="Classify Timing Requirements as Hard, Firm, or Soft Real-Time Requirements"];
    rtos01 [label="Prioritize tasks based on the hardness of their Real-Time Requirements"];
    rtos01 -> rtos00;
    rtos02 [label="Analyze and Select Scheduling Algorithms based on their Real-Time Requirements"];
    rtos02 -> {rtos112, rtos111, rtos04, rtos05};
    rtos05 [label="Demonstrate the limitations of calls to delay."];
    rtos05 -> {rtos051, rtos052};
    rtos051 [label="Meet a strict periodic deadline."];
    rtos052 [label="Analyze production/consumption ratios to prevent backlog."];
    rtos053 [label="Measure timing of a system."];

    rtos04 [label="Schedule operating system tasks"]
    rtos04 -> rtos033;
    rtos03 [label="Use Real-time operating systems (RTOS)"];
    rtos03 -> {rtos030, rtos031, rtos032, rtos033};
    rtos030 [label="Describe key functionality OS gives over bare metal"];
    rtos031 [label="setup an rtos based project."];
    rtos031 -> {rtos0310, rtos314, rtos0310};
    rtos0310 [label="Install PlatformIO"];
    rtos0311 [label="Use the command line"];
    rtos03110 [label="build a project"];
    rtos03110 -> rtos031100;
    rtos031100 [label="Write makefiles"];
    rtos031100 -> {rtos0311001, rtos0311002, rtos0311003, rtos0311004, rtos93};
    rtos0311001 [label="explain difference between phony and regular targets"];
    rtos0311002 [label="write a target recipe with and without substitutions"];
    rtos0311003 [label="create dependencies in recipes"];
    rtos0311004 [label="identify advantages and disadvantages of Makefiles for building"]
    rtos03111 [label="flash project"];
    rtos03112 [label="run debugger"];
    rtos032 [label="initialize the operating system"];
    rtos032 -> {rtos031};
    rtos033 [label="Instantiate tasks, locks and mutexes."];
    rtos033 -> {rtos031}
    rtos1 [label="Build concurrent systems"];
    rtos1 -> {rtos10, rtos11, rtos12};
    rtos10 [label="Apply the actor model"];
    rtos10 -> {rtos212, rtos81, rtos212};
    rtos11 [label="Shared state architecture"];
    rtos11 -> {rtos110, rtos111, rtos112, rtos812};
    rtos110 [label="Use Semaphores and Mutexes to Prevent Race Conditions"];
    rtos110 -> {rtos033};
    rtos111 [label="Identify and Prevent cases of Deadlock"];
    rtos111 -> {rtos110};
    rtos112 [label="Identify and Correct Priority Inversion"];
    rtos12 [label="Implement Event-Driven Systems"];
    rtos12 -> rtos53;
    rtos12 -> {rtos120};
    rtos120 [label="Describe Event-Driven Systems with State Machines"];
    rtos12 -> rtos10;
    rtos2 [label="Build fault tolerant systems"];
    rtos2 -> {rtos21, rtos7, rtos3, rtos32};
    rtos21 [label="Errors, Exception Handling"];
    rtos21 -> {rtos210, rtos211, rtos212};
    rtos210 [label="Use watchdog handler to identify errors"];
    rtos210 -> rtos031
    rtos211 [label="Describe techniques to recover from Real-Time Exceptions"];
    rtos212 [label="Apply supervisory trees"];
    rtos3 [label="Safety, Testing, and Verification"];
    rtos3 -> {rtos30, rtos31, rtos6};
    rtos30 [label="System modeling and verification"];
    rtos30 -> { rtos300, rtos301};
    rtos300 [label="Write System Model based on Specifications"];
    rtos301 [label="Read System Model to describe Specifications"];
    rtos31 [label="Write unit tests"];
    rtos31 -> { rtos310, rtos311, rtos312, rtos313};
    rtos310 [label="Choose testing strategies and methodologies"];
    rtos310 -> {rtos315,rtos316};
    rtos314 [label="Set up Testing Environments"];
    rtos315 [label="Describe difference between unit and integration tests"];
    rtos316 [label="Using mocking techniques to break coupling."];
    rtos316 -> {rtos3160, rtos3161 rtos316};
    rtos3160 [label="Apply polymorphism using function pointers."];
    rtos3161 [label="Create conditional definitions using preprocessor macros."];
    rtos3161 [label="Describe the static linking process and linking mocked implementations."];
    rtos314 -> {rtos3140};
    rtos3140 [label="Install Renode"];
    rtos311 [label="Write Tests to Verify Compliance with System Model"];
    rtos312 [label="Evaulate System Performance based on Tests"];
    rtos313 [label="Identify Risks from System Performance in Tests"];
    rtos32 [label="Update existing system without disruption"];
    rtos311 -> {rtos314, rtos301};
    rtos312 -> rtos314;
    rtos313 -> rtos314;
    rtos32 -> {rtos320, rtos321};
    rtos320 [label="Understand the existing behavior"];
    rtos321 [label="Apply test strategies to add tests"];
    rtos321 -> {rtos31};
    rtos5 [label="Build low-power systems"];
    rtos5 -> { rtos51, rtos52, rtos53 };
    rtos51 [label="Estimate energy use of a system"];
    rtos52 [label="Measure energy use of a system"];
    rtos53 [label="Use low power modes and power management peripherals."];
    rtos53 -> rtos031
    rtos6 [label="Review code and pull requests"];
    rtos7 [label="Apply ethics and risk management"];
    rtos7 -> { rtos70, rtos71, rtos72, rtos73 };
    rtos70 [label="Identify risks and consequences in medical, IoT, automotive and aviation, autonomous vehicles, etc."];
    rtos71 [label="Evaluate safety risks in a system design"];
    rtos71 -> {rtos70};
    rtos72 [label="Specify uptime requirements for a system."];
    rtos73 [label="Identify emergent behavior, its sources and consequences."];
    rtos8 [label="Build distributed systems"];
    rtos8 -> {rtos81, rtos82}
    rtos81 [label="Inter-Process Communication"];
    rtos81 -> { rtos810, rtos811, rtos812};
    rtos810 [label="Implement Queues as an inter-process interface"];
    rtos811 [label="Implement Mailboxes as an inter-process interface"];
    rtos812 [label="Implement Shared Memory as an inter-process interface"];
    rtos810 -> rtos032;
    rtos811 -> rtos032;
    rtos812 -> rtos032;
    rtos82 [label="Implement Networking Protocols"];
    rtos82 -> {rtos820, rtos821, rtos85};
    rtos85 [label="Use CAN Bus"];
    rtos85 -> {rtos032, rtos821, 851, rtos852, rtos853, rtos854, rtos855, rtos 856, rtos857};
    rtos820 [label="Identify different network topologies"];
    rtos8201 [label="Describe a broadcast/subscriber network topology."];
    rtos821 [label="Apply the OSI model to describe a network technology"];
    rtos821 -> {rtos851, rtos852, rtos857};
    rtos851 [label="Identify the electric characteristics of the CAN wiring."]
    rtos850 [label="Describe the properties of CAN that allow prioritization, error handling, and multiple bus members acting at the same time."];
    rtos852 [label="Identify the failure mode of a babbling node."];
    rtos852 -> rtos850;
    rtos850 -> rtos841;
    rtos853 [label="Use filtering to subscribe to specific messages."];
    rtos853 -> rtos857;
    rtos854 [label="Setup CAN message processing using a work queue."];
    rtos855 [label="Setup CAN message processing using an interrupt."];
    rtos854 -> rtos853;
    rtos855 -> rtos853;
    rtos856 [label="Send a message over the CAN bus."];
    rtos856 -> rtos853;
    rtos857 [label="Identify the components of the CAN bus framing."];
    { rank=same; rtos0; rtos1; rtos2; rtos8; rtos5}

    rtos9 [label="Work in a state of the art industry environment"]
    rtos9 -> {rtos31, rtos031, rtos90, rtos94, rtos32}
    rtos90 [label="Effectively manage code in source control using git."]
    rtos91 [label="Use basic git commands"]
    rtos910 [label="Commit, push, pull"]
    rtos911 [label="Branch and merge"]
    rtos912 [label="Tag"]
    rtos90 -> {rtos91, rtos92}
    rtos92 [label="Use CI/CD tools"]
    rtos92 -> rtos31
    rtos93 [label="Review pull requests"]
    rtos93 -> rtos911
    rtos94 [label="Read and use library documentation"]
}
